#!/bin/sh
# Minimal configure replacement for Pistachio

# Determine source directory (directory containing this script)
srcdir=$(dirname "$0")

# Default installation directories
prefix=/usr/local
exec_prefix="${prefix}"
includedir="${prefix}/include"
libdir="${exec_prefix}/lib/l4"
libexecdir="${exec_prefix}/libexec/l4"
kerneldir='../kernel'

# Parse arguments
for arg in "$@"; do
    case $arg in
        --host=*) HOST=${arg#*=} ;;
        --prefix=*) prefix=${arg#*=} ;;
        --exec-prefix=*) exec_prefix=${arg#*=} ;;
        --includedir=*) includedir=${arg#*=} ;;
        --libdir=*) libdir=${arg#*=} ;;
        --libexecdir=*) libexecdir=${arg#*=} ;;
        --help)
            echo "Usage: $0 [options]";
            echo "  --host=ARCH      select target architecture";
            echo "  --prefix=DIR     installation prefix";
            exit 0 ;;
        *)
            echo "Unknown option $arg" >&2 ; exit 1 ;;
    esac
done

# Determine host if not provided
if [ -z "$HOST" ]; then
    HOST=$(uname -m 2>/dev/null || echo unknown)
fi

# Map host to architecture
case $HOST in
    ia32|x86|i386*|i486*|i586*|i686*|i?86-pc-linux-gnu*)
        ARCH=ia32
        KERNEL=x86-kernel
        ;;
    powerpc64*|ppc64*)
        ARCH=powerpc64
        KERNEL=${ARCH}-kernel
        ;;
    powerpc*)
        ARCH=powerpc
        KERNEL=${ARCH}-kernel
        ;;
    amd64*|x86_64*|x86_64-pc-linux-gnu*)
        ARCH=amd64
        KERNEL=x86-kernel
        ;;
    *)
        echo "Unknown hardware architecture: $HOST" >&2
        echo "Please specify with --host=ARCH" >&2
        exit 1
        ;;
esac

# Platform defaults (simplified)
case $ARCH in
    ia32*|amd64*) PLAT=amd64-pc99 ;;
    powerpc*) PLAT=powerpc ;;
    powerpc64*) PLAT=powerpc64 ;;
    *) PLAT=$ARCH ;;
esac

CC=${CC:-cc}

printf "checking whether $CC accepts -std=c23... "
cat > conftest.c <<'EOT'
int main(void){return 0;}
EOT
if $CC -std=c23 -c conftest.c -o conftest.o >/dev/null 2>&1; then
    echo yes
    STD_CFLAG=-std=c23
else
    echo no
    rm -f conftest.c conftest.o
    echo "$CC does not support -std=c23" >&2
    exit 1
fi
rm -f conftest.c conftest.o

printf "checking whether $CC accepts -std=c++23... "
cat > conftest.cpp <<'EOT'
int main(){return 0;}
EOT
if $CC -x c++ -std=c++23 -c conftest.cpp -o conftest.o >/dev/null 2>&1; then
    echo yes
    STD_CXXFLAG=-std=c++23
else
    echo no
    rm -f conftest.cpp conftest.o
    echo "$CC does not support -std=c++23" >&2
    exit 1
fi
rm -f conftest.cpp conftest.o

# Generate config.mk
sed \
    -e "s|@configure_input@|Generated by configure script|" \
    -e "s|@ARCH@|$ARCH|g" \
    -e "s|@PLAT@|$PLAT|g" \
    -e "s|@KERNEL@|$KERNEL|g" \
    -e "s|@prefix@|$prefix|g" \
    -e "s|@exec_prefix@|$exec_prefix|g" \
    -e "s|@includedir@|$includedir|g" \
    -e "s|@libdir@|$libdir|g" \
    -e "s|@libexecdir@|$libexecdir|g" \
    -e "s|@kerneldir@|$kerneldir|g" \
    -e "s|@SET_MAKE@||" \
    -e "s|@SHELL@|/bin/sh|" \
    -e "s|@CC@|$CC|" \
    -e "s|@CFLAGS@|$STD_CFLAG|" \
    -e "s|@CXXSTD@|$STD_CXXFLAG|" \
    -e "s|@LDFLAGS@||" \
    -e "s|@CPPFLAGS@||" \
    -e "s|@TOOLPREFIX@||" \
    -e "s|@LN_S@|ln -s|" \
    -e "s|@AWK@|awk|" \
    -e "s|@INSTALL@|install|" \
    -e "s|@INSTALL_PROGRAM@|install|" \
    -e "s|@INSTALL_DATA@|install -m 644|" \
    -e "s|@INSTALL_SCRIPT@|install|" \
    -e "s|@KICKSTART_LINKBASE@|0|" \
    -e "s|@SIGMA0_LINKBASE@|0|" \
    -e "s|@ROOTTASK_LINKBASE@|0|" \
    "$srcdir/config.mk.in" > config.mk

# Generate Makefile
sed \
    -e "s|@srcdir@|$srcdir|g" \
    -e "s|@top_srcdir@|$srcdir|g" \
    -e "s|@builddir@|$(pwd)|g" \
    "$srcdir/Makefile.in" > Makefile

# Generate Makefiles for subdirectories
find "$srcdir" -mindepth 1 -name 'Makefile.in' | while read -r mf; do
    mf_srcdir=$(dirname "$mf")
    mf_rel=${mf_srcdir#$srcdir/}
    mkdir -p "$mf_rel"
    sed \
        -e "s|@srcdir@|$mf_srcdir|g" \
        -e "s|@top_srcdir@|$srcdir|g" \
        -e "s|@top_builddir@|$(pwd)|g" \
        "$mf" > "$mf_rel/Makefile"
done

# Ensure lib directory exists in build tree
mkdir -p lib

# Create a minimal config.status for compatibility
cat > config.status <<CONFEOF
#!/bin/sh
[ "\$1" = "--recheck" ] && shift
exec "$srcdir/configure" "\$@"
CONFEOF
chmod +x config.status

cat <<EOF

Configuration complete.
Run "make" to build Pistachio.
EOF
