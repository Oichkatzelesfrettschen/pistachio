
;----------------------------------------------------------------------------
;
;       intr stack descriptions
;
;----------------------------------------------------------------------------

 

int_pm_stack struc

  ip_es         dd 0
  ip_ds         dd 0

  ip_edi        dd 0
  ip_esi        dd 0
  ip_ebp        dd 0
                dd 0
  ip_ebx        dd 0
  ip_edx        dd 0
  ip_ecx        dd 0
  ip_eax        dd 0

  ip_error_code dd 0

  ip_eip        dd 0
  ip_cs         dw 0,0
  ip_eflags     dd 0
  ip_esp        dd 0
  ip_ss         dw 0,0

int_pm_stack ends





;----------------------------------------------------------------------------
;
;       exception & intr codes
;
;----------------------------------------------------------------------------
;
;       FEeeeeee         error code (eeeeee) generated by hardware
;
;       FFFFFFkk         code (kk) generated by kernel
;
;----------------------------------------------------------------------------


hardware_ec              equ 0FEh


fault                    equ (-128+0)
trap1                    equ (-128+1)
trap2                    equ (-128+2)
debug_ec                 equ (-128+3)




;----------------------------------------------------------------------------
;
;       ipre
;
;----------------------------------------------------------------------------
; PRECONDITION:
;
;       stack contains iret vector generated by hardware
;       interrupts disabled
;
;       icode = ec_present  <=>  stack contains hw generated error code
;
;----------------------------------------------------------------------------
; POSTCONDITION:
;
;       regs saved, stack image allows restart after shutdown
;
;       EAX,EDX,ESI,EDI,EBP   unchanged
;
;----------------------------------------------------------------------------


ipre macro icode,dscode

  IFIDN <icode>,<ec_present>
     mov   byte ptr ss:[esp+3],hardware_ec
  ELSE
  IFDIF <icode>,<ec_pushed>
     push  icode
  ENDIF
  ENDIF
  pushad
  push  ds
  push  es
  IFDIF <dscode>,<no_ds_load>
     push  linear_kernel_space
     pop   ds
  ENDIF

  endm



;----------------------------------------------------------------------------
;
;       ipost
;
;----------------------------------------------------------------------------
; PRECONDITION:
;
;       ipre generated stack
;
;       DS,ES   linear space
;
;       interrupts disabled !
;
;----------------------------------------------------------------------------
; POSTCONDITION:
;
;       saved context restored, returned from interrupt/exception
;
;----------------------------------------------------------------------------



ipost macro

  pop   es
  pop   ds
  popad
  add   esp,4
  iretd

  endm

