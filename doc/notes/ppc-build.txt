Building the PowerPC Kernel with Modern Toolchains
=================================================

This guide explains how to cross compile Pistachio for PowerPC using
current versions of GCC or Clang.  The sources require a C23 compiler
and a C++ compiler supporting at least the C++17 standard.  GCC 14 and
Clang 17 or newer are known to work.

Prerequisites
-------------

Install a cross compilation toolchain.  On Debian based systems the
packages `gcc-powerpc-linux-gnu` and `g++-powerpc-linux-gnu` provide a
modern GCC.  Alternatively Clang can be used together with `lld` and
the LLVM binutils.

Example installation:

    $ sudo apt install gcc-powerpc-linux-gnu g++-powerpc-linux-gnu binutils-powerpc-linux-gnu

When using Clang set the target triple explicitly and invoke the LLVM
binutils:

    $ export CC="clang --target=powerpc-linux-gnu"
    $ export CXX="clang++ --target=powerpc-linux-gnu"
    $ export AR=llvm-ar
    $ export LD=ld.lld

Configuring the Kernel
----------------------

Create a separate build directory and initialise it via the kernel
Makefile::

    $ cd kernel
    $ make BUILDDIR=/path/to/build-powerpc
    $ cd /path/to/build-powerpc
    $ make menuconfig

Set `TOOLPREFIX` in `Makeconf.local` to point at the cross compiler
prefix, e.g.::

    TOOLPREFIX=/usr/bin/powerpc-linux-gnu-

After configuration build the kernel with::

    $ make

Building Userland
-----------------

User level components are configured with Autoconf.  From the `user`
subdirectory run::

    $ mkdir build-powerpc && cd build-powerpc
    $ ../configure --host=powerpc-linux-gnu \
                   CC=powerpc-linux-gnu-gcc \
                   CXX=powerpc-linux-gnu-g++
    $ make

The same configure invocation works when using Clang if the environment
variables shown above are set.

Running the Kernel under QEMU
-----------------------------

QEMU can emulate a variety of PowerPC machines.  A minimal command
line to boot the kernel is::

    $ qemu-system-ppc -M g3beige -kernel kernel/powerpc-kernel

For 64-bit targets use `qemu-system-ppc64` instead.

